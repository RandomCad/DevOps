name: hamster

on:
  workflow_call:  # allow this workflow to be called from other workflows
  pull_request:
    branches: [ "main" ]
    
env:
  CARGO_TERM_COLOR: always
  
jobs:
  check_duplicate:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
    # wait for 2s so that fuchs.yml has already started this and concurrent_skipping skips this 
    - name: Wait 2 seconds 
      run: sleep 2
    - id: skip_check
      uses: fkirc/skip-duplicate-actions@v5
      with:
        concurrent_skipping: "same_content_newer"
        paths: '["hamster/**", "Cargo.toml", "Cargo.lock"]'

  build_hamster:
    runs-on: ubuntu-latest
    needs: check_duplicate
    if: needs.check_duplicate.outputs.should_skip != 'true'
    steps:
    - uses: actions/checkout@v4
    - name: Setup cache
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: shared
        # hamster and chamaeleon share a cache -> only chamaeleon stores to cache to avoid conflicts
        save-if: "false"
    - name: Build
      run: cargo build --verbose -p hamster
    - name: Run Application Test
      run: ./hamster/test.sh
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        file: "./hamster/Dockerfile"
        push: false
        load: true
        tags: hamster:test
        cache-from: type=gha,scope=hamster
        cache-to: type=gha,mode=max,scope=hamster
    - name: Run container to test
      working-directory: ./hamster
      run: ./test.sh docker
