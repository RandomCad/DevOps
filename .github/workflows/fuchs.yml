# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: fuchs

on:
  workflow_call:  # allow this workflow to be called from other workflows
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  check_duplicate:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
    - id: skip_check
      uses: fkirc/skip-duplicate-actions@v5
      with:
        concurrent_skipping: "same_content_newer"
        # also check fuchs if hamster/chamaeleon are changed
        # to prevent accidental breaking changes
        paths: '["fuchs/**", "hamster/**", "chamaeleon/**", "Cargo.toml", "Cargo.lock"]'

  test_build_hamster:
    uses: ./.github/workflows/hamster.yml  # use the callable tests job to run tests and build a new docker immage
    needs: check_duplicate
    if: needs.check_duplicate.outputs.should_skip != 'true'

  test_build_chamaeleon:
    uses: ./.github/workflows/chamaeleon.yml  # use the callable tests job to run tests and build a new docker immage
    needs: check_duplicate
    if: needs.check_duplicate.outputs.should_skip != 'true'
    
  lint_and_test_fuchs:
    runs-on: ubuntu-latest
    needs: [test_build_hamster, test_build_chamaeleon, check_duplicate]
    if: needs.check_duplicate.outputs.should_skip != 'true'
    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/ruff-action@v3
      with:
        src: "./fuchs"
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Setup phyton dependencies
      working-directory: ./fuchs
      run: 
        pip install --no-cache-dir --upgrade -r requirements.txt
    - name: Run UnitTests
      working-directory: ./fuchs/
      run: 
        python -m unittest ./tests/test_main.py ./tests/test_helpers.py ./tests/test_database.py
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    # - name: Login to Docker Hub
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Run IntegrationTests
      run: |
        export DB_NAME=fuchs_db
        export DB_PASSWORD=postgres
        export DB_USER=postgres
        export DB_HOST=localhost
        export URL_HAMSTER=http://localhost:8001
        export URL_CHAMAELEON=http://localhost:8002
        docker compose -f fuchs/docker-compose.yml --project-directory . up -d --build
        sleep 1
        cd fuchs
        python -m unittest ./tests/test_api_of_app.py
