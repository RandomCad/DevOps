components:
  schemas:
    Body_store_media_notes__note_id__media__post:
      properties:
        file:
          format: binary
          title: File
          type: string
      required:
      - file
      title: Body_store_media_notes__note_id__media__post
      type: object
    Body_update_media_notes__note_id__media__media_id__put:
      properties:
        file:
          format: binary
          title: File
          type: string
      required:
      - file
      title: Body_update_media_notes__note_id__media__media_id__put
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.1.0
paths:
  /notes:
    get:
      description: returns a list of all notes, containing the id and title of each
        note
      operationId: read_all_notes_notes_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Read All Notes
  /notes/:
    post:
      description: 'creates a new note.


        takes the markdown content of the note as input, converts it to html and

        stores the markdown in the db and distributes the html over the hamster.


        returns the path to the note for the hamster'
      operationId: create_note_notes__post
      parameters:
      - in: query
        name: note_title
        required: true
        schema:
          title: Note Title
          type: string
      - in: query
        name: note_content_md
        required: true
        schema:
          title: Note Content Md
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Note
  /notes/{note_id}:
    delete:
      description: 'deletes a note.


        removes both the markdown (db) and the html content (hamster).'
      operationId: delete_note_notes__note_id__delete
      parameters:
      - in: path
        name: note_id
        required: true
        schema:
          title: Note Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Note
    get:
      description: 'returns the markdown content of a note plus the metadata of pictures

        of the note'
      operationId: read_note_notes__note_id__get
      parameters:
      - in: path
        name: note_id
        required: true
        schema:
          title: Note Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Read Note
    put:
      description: 'updates the content & title of a note.


        takes the new markdown content of the note as input, converts it to html,

        updates the old markdown (on db) and html (on hamster).'
      operationId: update_note_notes__note_id__put
      parameters:
      - in: path
        name: note_id
        required: true
        schema:
          title: Note Id
          type: integer
      - in: query
        name: note_title
        required: true
        schema:
          title: Note Title
          type: string
      - in: query
        name: note_content_md
        required: true
        schema:
          title: Note Content Md
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Note
  /notes/{note_id}/media/:
    post:
      description: 'stores a picture on the hamster.


        returns the path to the picture.'
      operationId: store_media_notes__note_id__media__post
      parameters:
      - in: path
        name: note_id
        required: true
        schema:
          title: Note Id
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_store_media_notes__note_id__media__post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Store Media
  /notes/{note_id}/media/{media_id}:
    delete:
      description: deletes a picture and its metadata.
      operationId: delete_pic_notes__note_id__media__media_id__delete
      parameters:
      - in: path
        name: note_id
        required: true
        schema:
          title: Note Id
          type: integer
      - in: path
        name: media_id
        required: true
        schema:
          title: Media Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Pic
    put:
      description: 'updates a picture on the hamster.


        takes the new picture content as input and updates the picture on the

        hamster.'
      operationId: update_media_notes__note_id__media__media_id__put
      parameters:
      - in: path
        name: note_id
        required: true
        schema:
          title: Note Id
          type: integer
      - in: path
        name: media_id
        required: true
        schema:
          title: Media Id
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_update_media_notes__note_id__media__media_id__put'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Media
