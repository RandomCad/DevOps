components:
  schemas:
    Body_store_media_notes__note_id__media__post:
      properties:
        file:
          format: binary
          title: File
          type: string
      required:
      - file
      title: Body_store_media_notes__note_id__media__post
      type: object
    Body_update_media_notes__note_id__media__media_id__put:
      properties:
        file:
          format: binary
          title: File
          type: string
      required:
      - file
      title: Body_update_media_notes__note_id__media__media_id__put
      type: object
    ClientErrorResponse:
      properties:
        detail:
          description: Error message describing the issue
          examples:
          - 'Invalid request: Missing title'
          title: Detail
          type: string
      required:
      - detail
      title: ClientErrorResponse
      type: object
    CreateResponse:
      properties:
        id:
          description: ID of the newly created resource
          examples:
          - 1
          title: Id
          type: integer
        path:
          description: Path to the newly created resource
          examples:
          - note_1/web.html
          title: Path
          type: string
        status:
          const: created
          description: Status of the creation operation
          examples:
          - created
          title: Status
          type: string
      required:
      - status
      - id
      - path
      title: CreateResponse
      type: object
    DeleteResponse:
      properties:
        status:
          const: deleted
          description: Status of the delete operation
          examples:
          - deleted
          title: Status
          type: string
      required:
      - status
      title: DeleteResponse
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    MediaResponse:
      properties:
        id:
          description: ID of the media file
          examples:
          - 1
          title: Id
          type: integer
        path:
          description: Path to the media file on the hamster server
          examples:
          - note_1/media/1
          title: Media Path
          type: string
      required:
      - id
      - path
      title: MediaResponse
      type: object
    NoteResponse:
      properties:
        content:
          description: Markdown content of the note
          examples:
          - '# My first note


            This is my first note.'
          title: Note Content
          type: string
        id:
          description: ID of the note
          examples:
          - 1
          title: Note ID
          type: integer
        media:
          items:
            $ref: '#/components/schemas/MediaResponse'
          title: Media
          type: array
        path:
          description: Path to the note on the hamster server
          examples:
          - note_1/web.html
          title: Note Path
          type: string
        title:
          description: Title of the note
          examples:
          - My first note
          title: Note Title
          type: string
      required:
      - id
      - title
      - content
      - path
      - media
      title: NoteResponse
      type: object
    NotesResponse:
      properties:
        notes:
          description: List of reduced note objects
          examples:
          - - id: 1
              title: My first note
            - id: 2
              title: My second note
          items:
            $ref: '#/components/schemas/ReducedNoteResponse'
          title: Notes
          type: array
      required:
      - notes
      title: NotesResponse
      type: object
    ReducedNoteResponse:
      properties:
        id:
          description: ID of the note
          examples:
          - 1
          title: Id
          type: integer
        title:
          description: Title of the note
          examples:
          - My first note
          title: Title
          type: string
      required:
      - id
      - title
      title: ReducedNoteResponse
      type: object
    ServerErrorResponse:
      properties:
        detail:
          description: Error message describing the issue
          examples:
          - 'Server error: Database connection failed'
          title: Detail
          type: string
      required:
      - detail
      title: ServerErrorResponse
      type: object
    UpdateResponse:
      properties:
        id:
          description: ID of the updated resource
          examples:
          - 1
          title: Id
          type: integer
        status:
          const: updated
          description: Status of the update operation
          examples:
          - updated
          title: Status
          type: string
      required:
      - status
      - id
      title: UpdateResponse
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.1.0
paths:
  /notes:
    get:
      description: returns a list of all notes
      operationId: read_all_notes_notes_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotesResponse'
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
          description: Invalid Request
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
          description: Server Error
      summary: Read All Notes
      tags:
      - notes
  /notes/:
    post:
      description: 'creates a new note.


        takes the markdown content of the note as input, converts it to html and

        stores the markdown in the db and distributes the html over the hamster.


        returns the path to the note for the hamster'
      operationId: create_note_notes__post
      parameters:
      - in: query
        name: note_title
        required: true
        schema:
          title: Note Title
          type: string
      - in: query
        name: note_content_md
        required: true
        schema:
          title: Note Content Md
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponse'
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
          description: Invalid Request
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
          description: Server Error
      summary: Create Note
      tags:
      - notes
  /notes/{note_id}:
    delete:
      description: 'deletes a note.


        removes both the markdown (db) and the html content (hamster).'
      operationId: delete_note_notes__note_id__delete
      parameters:
      - in: path
        name: note_id
        required: true
        schema:
          title: Note Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
          description: Invalid Request
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
          description: Server Error
      summary: Delete Note
      tags:
      - notes
    get:
      description: 'returns the markdown content of a note plus the metadata of pictures

        of the note'
      operationId: read_note_notes__note_id__get
      parameters:
      - in: path
        name: note_id
        required: true
        schema:
          title: Note Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
          description: Invalid Request
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
          description: Server Error
      summary: Read Note
      tags:
      - notes
    put:
      description: 'updates the content & title of a note.


        takes the new markdown content of the note as input, converts it to html,

        updates the old markdown (on db) and html (on hamster).'
      operationId: update_note_notes__note_id__put
      parameters:
      - in: path
        name: note_id
        required: true
        schema:
          title: Note Id
          type: integer
      - in: query
        name: note_title
        required: true
        schema:
          title: Note Title
          type: string
      - in: query
        name: note_content_md
        required: true
        schema:
          title: Note Content Md
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResponse'
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
          description: Invalid Request
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
          description: Server Error
      summary: Update Note
      tags:
      - notes
  /notes/{note_id}/media/:
    post:
      description: 'stores a picture on the hamster.


        returns the path to the picture.'
      operationId: store_media_notes__note_id__media__post
      parameters:
      - in: path
        name: note_id
        required: true
        schema:
          title: Note Id
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_store_media_notes__note_id__media__post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponse'
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
          description: Invalid Request
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
          description: Server Error
      summary: Store Media
      tags:
      - media
  /notes/{note_id}/media/{media_id}:
    delete:
      description: deletes a media file and its metadata.
      operationId: delete_media_notes__note_id__media__media_id__delete
      parameters:
      - in: path
        name: note_id
        required: true
        schema:
          title: Note Id
          type: integer
      - in: path
        name: media_id
        required: true
        schema:
          title: Media Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
          description: Invalid Request
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
          description: Server Error
      summary: Delete Media
      tags:
      - media
    put:
      description: 'updates a picture on the hamster.


        takes the new picture content as input and updates the picture on the

        hamster.'
      operationId: update_media_notes__note_id__media__media_id__put
      parameters:
      - in: path
        name: note_id
        required: true
        schema:
          title: Note Id
          type: integer
      - in: path
        name: media_id
        required: true
        schema:
          title: Media Id
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_update_media_notes__note_id__media__media_id__put'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResponse'
          description: Successful Response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
          description: Invalid Request
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
          description: Server Error
      summary: Update Media
      tags:
      - media
